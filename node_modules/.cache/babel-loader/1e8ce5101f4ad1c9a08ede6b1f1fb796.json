{"ast":null,"code":"import _objectSpread from \"/Users/tyler/Desktop/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nfunction thoughtsReducer(state = [], action) {\n  const i = action.inputPostId;\n\n  switch (action.type) {\n    case 'UP_VOTE':\n      return [...state.slice(0, i), _objectSpread({}, state[i], {\n        up_vote: state[i].up_vote + 1\n      }), ...state.slice(i + 1)];\n\n    case 'DOWN_VOTE':\n      return [...state.slice(0, i), _objectSpread({}, state[i], {\n        down_vote: state[i].down_vote + 1\n      }), ...state.slice(i + 1)];\n\n    case 'REPORT_THOUGHT':\n      return [...state.slice(0, i), _objectSpread({}, state[i], {\n        report_count: state[i].report_count + 1\n      }), ...state.slice(i + 1)];\n\n    case 'CREATE_THOUGHT':\n      console.log(\"REDUCER: create_thought\", state);\n      return [...state, {\n        id: action.inputPostId,\n        text: action.inputText,\n        up_vote: action.inputUpVote,\n        down_vote: action.inputDownVote,\n        report_count: action.inputReportCount,\n        hash_tag: action.inputHashTags,\n        time_stamp: action.inputTimeStamp\n      }];\n\n    case 'GET_THOUGHTS':\n      return action.thoughts_;\n\n    default:\n      return state;\n  }\n}\n\nexport default thoughtsReducer; // return [...state,{text:action.inputText, mark_owner: action.inputMarkOwner}]\n//export function createThought(inputPostId, inputText, inputTags)\n// inputPostId,\n// inputText,\n// inputUpVote,\n// inputDownVote,\n// inputReportCount,\n// inputHashTags,\n// inputTimeStamp,\n// \"id\": 0,\n// \"text\": \"Snow! ‚õÑÔ∏èüå®‚ùÑÔ∏è #lifewithsnickers\",\n// \"up_vote\": 10,\n// \"down_vote\": 2,\n// \"report_count\": 0,\n// \"hash_tag\":[\"snow\", \"daily\",\"more\", \"stuff\"],\n// \"time_stamp\" : \"1 min ago\", //i dont need this later","map":{"version":3,"sources":["/Users/tyler/Desktop/test/src/reducers/thoughtsReducer.js"],"names":["thoughtsReducer","state","action","i","inputPostId","type","slice","up_vote","down_vote","report_count","console","log","id","text","inputText","inputUpVote","inputDownVote","inputReportCount","hash_tag","inputHashTags","time_stamp","inputTimeStamp","thoughts_"],"mappings":";;AAAA,SAASA,eAAT,CAAyBC,KAAK,GAAG,EAAjC,EAAqCC,MAArC,EACA;AACE,QAAMC,CAAC,GAAGD,MAAM,CAACE,WAAjB;;AACA,UAAOF,MAAM,CAACG,IAAd;AAEE,SAAK,SAAL;AACE,aAAM,CACJ,GAAGJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAcH,CAAd,CADC,oBAEAF,KAAK,CAACE,CAAD,CAFL;AAEUI,QAAAA,OAAO,EAAEN,KAAK,CAACE,CAAD,CAAL,CAASI,OAAT,GAAiB;AAFpC,UAGJ,GAAGN,KAAK,CAACK,KAAN,CAAYH,CAAC,GAAC,CAAd,CAHC,CAAN;;AAKF,SAAK,WAAL;AACE,aAAM,CACJ,GAAGF,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAcH,CAAd,CADC,oBAEAF,KAAK,CAACE,CAAD,CAFL;AAEUK,QAAAA,SAAS,EAAEP,KAAK,CAACE,CAAD,CAAL,CAASK,SAAT,GAAmB;AAFxC,UAGJ,GAAGP,KAAK,CAACK,KAAN,CAAYH,CAAC,GAAC,CAAd,CAHC,CAAN;;AAKF,SAAK,gBAAL;AACE,aAAM,CACJ,GAAGF,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAcH,CAAd,CADC,oBAEAF,KAAK,CAACE,CAAD,CAFL;AAEUM,QAAAA,YAAY,EAAER,KAAK,CAACE,CAAD,CAAL,CAASM,YAAT,GAAsB;AAF9C,UAGJ,GAAGR,KAAK,CAACK,KAAN,CAAYH,CAAC,GAAC,CAAd,CAHC,CAAN;;AAKF,SAAK,gBAAL;AACEO,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCV,KAAvC;AACA,aAAO,CAAC,GAAGA,KAAJ,EAAU;AACfW,QAAAA,EAAE,EAAEV,MAAM,CAACE,WADI;AAEfS,QAAAA,IAAI,EAAEX,MAAM,CAACY,SAFE;AAGfP,QAAAA,OAAO,EAAEL,MAAM,CAACa,WAHD;AAIfP,QAAAA,SAAS,EAAEN,MAAM,CAACc,aAJH;AAKfP,QAAAA,YAAY,EAAEP,MAAM,CAACe,gBALN;AAMfC,QAAAA,QAAQ,EAAEhB,MAAM,CAACiB,aANF;AAOfC,QAAAA,UAAU,EAAElB,MAAM,CAACmB;AAPJ,OAAV,CAAP;;AAUF,SAAK,cAAL;AACE,aAAOnB,MAAM,CAACoB,SAAd;;AAEF;AACE,aAAOrB,KAAP;AApCJ;AAsCD;;AAED,eAAeD,eAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function thoughtsReducer(state = [], action)\n{\n  const i = action.inputPostId;\n  switch(action.type)\n  {\n    case 'UP_VOTE' :\n      return[\n        ...state.slice(0,i),\n        {...state[i], up_vote: state[i].up_vote+1},\n        ...state.slice(i+1),\n      ]\n    case 'DOWN_VOTE' :\n      return[\n        ...state.slice(0,i),\n        {...state[i], down_vote: state[i].down_vote+1},\n        ...state.slice(i+1),\n      ]\n    case 'REPORT_THOUGHT' :\n      return[\n        ...state.slice(0,i),\n        {...state[i], report_count: state[i].report_count+1},\n        ...state.slice(i+1),\n      ]\n    case 'CREATE_THOUGHT' :\n      console.log(\"REDUCER: create_thought\", state);\n      return [...state,{\n        id: action.inputPostId,\n        text: action.inputText,\n        up_vote: action.inputUpVote,\n        down_vote: action.inputDownVote,\n        report_count: action.inputReportCount,\n        hash_tag: action.inputHashTags,\n        time_stamp: action.inputTimeStamp,\n      }]\n\n    case 'GET_THOUGHTS' :\n      return action.thoughts_\n\n    default :\n      return state;\n  }\n}\n\nexport default thoughtsReducer;\n// return [...state,{text:action.inputText, mark_owner: action.inputMarkOwner}]\n//export function createThought(inputPostId, inputText, inputTags)\n// inputPostId,\n// inputText,\n// inputUpVote,\n// inputDownVote,\n// inputReportCount,\n// inputHashTags,\n// inputTimeStamp,\n// \"id\": 0,\n// \"text\": \"Snow! ‚õÑÔ∏èüå®‚ùÑÔ∏è #lifewithsnickers\",\n// \"up_vote\": 10,\n// \"down_vote\": 2,\n// \"report_count\": 0,\n// \"hash_tag\":[\"snow\", \"daily\",\"more\", \"stuff\"],\n// \"time_stamp\" : \"1 min ago\", //i dont need this later\n"]},"metadata":{},"sourceType":"module"}