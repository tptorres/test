{"ast":null,"code":"import _objectSpread from \"/Users/tyler/Desktop/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../actions/ActionCreators';\nimport { getThoughts } from '../store';\nimport Main from './Main';\n\nfunction mapStateToProps(state) {\n  return {\n    thoughts_: state.thoughtsReducer,\n    comments_: state.commentsReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return _objectSpread({}, bindActionCreators(actionCreators, dispatch), {\n    getThoughts: () => dispatch(getThoughts())\n  });\n}\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(Main);\nexport default App;","map":{"version":3,"sources":["/Users/tyler/Desktop/test/src/components/App.js"],"names":["bindActionCreators","connect","actionCreators","getThoughts","Main","mapStateToProps","state","thoughts_","thoughtsReducer","comments_","commentsReducer","mapDispatchToProps","dispatch","App"],"mappings":";AAAA,SAAQA,kBAAR,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAIC,cAAX,MAA+B,2BAA/B;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAM;AACJC,IAAAA,SAAS,EAAED,KAAK,CAACE,eADb;AAEJC,IAAAA,SAAS,EAAEH,KAAK,CAACI;AAFb,GAAN;AAID;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,2BAAWZ,kBAAkB,CAACE,cAAD,EAAiBU,QAAjB,CAA7B;AAAyDT,IAAAA,WAAW,EAAE,MAAMS,QAAQ,CAACT,WAAW,EAAZ;AAApF;AACD;;AAED,MAAMU,GAAG,GAAGZ,OAAO,CAACI,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CP,IAA7C,CAAZ;AAEA,eAAeS,GAAf","sourcesContent":["import {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport *as actionCreators from '../actions/ActionCreators';\nimport {getThoughts} from '../store'\nimport Main from './Main';\n\nfunction mapStateToProps(state){\n  return{\n    thoughts_: state.thoughtsReducer,\n    comments_: state.commentsReducer,\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {...bindActionCreators(actionCreators, dispatch), getThoughts: () => dispatch(getThoughts())}\n}\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(Main);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}