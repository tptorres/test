{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Desktop/test/src/components/posts/ThoughtPreview.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport default class ThoughtPreview extends Component {\n  render() {\n    let myThought = this.props.thoughts_[this.props.index].post;\n    let myComment = this.props.thoughts_[this.props.index].comment; // let myCount = this.props.thoughts_[this.props.index].count;\n\n    let myTags = this.props.thoughts_[this.props.index].tag;\n    return React.createElement(\"div\", {\n      className: \"post-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"details-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"postId: \", myThought.id, \" \"), React.createElement(\"span\", {\n      className: \"timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.myProps.post.createdAt)), React.createElement(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, myThought.text), React.createElement(\"div\", {\n      className: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, myTags.map((myTag, i) => React.createElement(\"span\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" #\", myTags[i].tag, \" \"))), React.createElement(\"div\", {\n      className: \"controls-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"vote-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.upVote.bind(null, this.props.myProps.id),\n      className: \"vote up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Up\"), React.createElement(\"span\", {\n      className: \"votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"button\", {\n      onClick: this.props.downVote.bind(null, this.props.myProps.id),\n      className: \"vote down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Down\"), React.createElement(Link, {\n      to: \"/thoughts/\".concat(myThought.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"comment-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      className: \"votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" \", myComment.length, \" \"))));\n  }\n\n} //{this.props.myProps.hash_tag.map((myTag, i) => <span key = {i}>#{myTag} </span> )}\n//<span className = \"votes\"> {this.props.comments_[this.props.myProps.id].length} </span>","map":{"version":3,"sources":["/Users/tyler/Desktop/test/src/components/posts/ThoughtPreview.js"],"names":["React","Component","Link","ThoughtPreview","render","myThought","props","thoughts_","index","post","myComment","comment","myTags","tag","id","myProps","createdAt","text","map","myTag","i","upVote","bind","downVote","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACpDG,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAhC,EAAuCC,IAAvD;AACA,QAAIC,SAAS,GAAG,KAAKJ,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAhC,EAAuCG,OAAvD,CAFO,CAGP;;AACA,QAAIC,MAAM,GAAG,KAAKN,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAhC,EAAuCK,GAApD;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYR,SAAS,CAACS,EAAtB,MADF,EAEE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKR,KAAL,CAAWS,OAAX,CAAmBN,IAAnB,CAAwBO,SAArD,CAFF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBX,SAAS,CAACY,IAAjC,CANF,EAQE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KACV;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiBR,MAAM,CAACQ,CAAD,CAAN,CAAUP,GAA3B,MADD,CADH,CARF,EAcE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWe,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,KAAKhB,KAAL,CAAWS,OAAX,CAAmBD,EAAhD,CADX;AAEE,MAAA,SAAS,EAAC,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,EAQE;AACE,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWiB,QAAX,CAAoBD,IAApB,CAAyB,IAAzB,EAA+B,KAAKhB,KAAL,CAAWS,OAAX,CAAmBD,EAAlD,CADX;AAEE,MAAA,SAAS,EAAC,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EAcE,oBAAC,IAAD;AAAM,MAAA,EAAE,sBAAeT,SAAS,CAACS,EAAzB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAdF,EAmBE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0BJ,SAAS,CAACc,MAApC,MAnBF,CADF,CAdF,CADF;AA+CD;;AAtDmD,C,CAyDtD;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class ThoughtPreview extends Component {\n  render() {\n    let myThought = this.props.thoughts_[this.props.index].post;\n    let myComment = this.props.thoughts_[this.props.index].comment;\n    // let myCount = this.props.thoughts_[this.props.index].count;\n    let myTags = this.props.thoughts_[this.props.index].tag;\n\n    return (\n      <div className='post-preview'>\n        <div className='details-top'>\n          <p>postId: {myThought.id} </p>\n          <span className='timestamp'>{this.props.myProps.post.createdAt}</span>\n        </div>\n\n        <div className='text'>{myThought.text}</div>\n\n        <div className='tags'>\n          {myTags.map((myTag, i) => (\n            <span key={i}> #{myTags[i].tag} </span>\n          ))}\n        </div>\n\n        <div className='controls-bottom'>\n          <div className='vote-wrapper'>\n            <button\n              onClick={this.props.upVote.bind(null, this.props.myProps.id)}\n              className='vote up'\n            >\n              Up\n            </button>\n            <span className='votes'>0</span>\n            <button\n              onClick={this.props.downVote.bind(null, this.props.myProps.id)}\n              className='vote down'\n            >\n              Down\n            </button>\n            <Link to={`/thoughts/${myThought.id}`}>\n              <button className='comment-btn'>\n                <i className='fas fa-comments' />\n              </button>\n            </Link>\n            <span className='votes'> {myComment.length} </span>\n          </div>\n          {/* <button\n            onClick={() => this.props.startModalHandler()}\n            className='report'\n          >\n            {' '}\n            <i className='fas fa-flag' />{' '}\n          </button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\n//{this.props.myProps.hash_tag.map((myTag, i) => <span key = {i}>#{myTag} </span> )}\n//<span className = \"votes\"> {this.props.comments_[this.props.myProps.id].length} </span>\n"]},"metadata":{},"sourceType":"module"}